swagger: '2.0'
info:
  description: Ninja-qPCR API
  version: 1.0.0
  title: Ninja-qPCR Console
  termsOfService: 'https://github.com/hisashin/Ninja-qPCR'
  contact:
    email: goda.mariko@gmail.com
  license:
    name: GNU General Public License v3.0
    url: 'https://github.com/hisashin/Ninja-qPCR/blob/master/LICENSE'
host: localhost:2222
basePath: /
tags:
  - name: protocols
    description: qPCR Protocols
    externalDocs:
      description: Details
      url: 'https://github.com/hisashin/Ninja-qPCR'
  - name: logs
    description: Experiment logs
  - name: device
    description: Control Ninja-qPCR Device
    externalDocs:
      description: Details
      url: 'https://github.com/hisashin/Ninja-qPCR'
schemes:
  - http
  - https
paths:
  /protocols:
    get:
      tags:
        - protocols
      summary: Retrieves protocols
      description: ''
      operationId: listProtocols
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          description: The number of items to skip before starting to collect the result set
          required: false
          type: integer
        - name: page
          in: query
          description: page index
          required: false
          type: integer
        - name: limit
          in: query
          description:  The numbers of items to return
          required: false
          type: integer
        - name: sort
          in: query
          description: Sort order
          required: false
          enum: [created, updated, used, name]
          type: string
        - name: order
          in: query
          description: Sort order
          required: false
          type: string
          enum: [asc,desc]
        - name: keyword
          in: query
          description: Free keyword
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            allOf:
              - $ref: '#/definitions/Pagination'
              - properties:
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/ProtocolFile'
        '500':
          description: Server-side error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - protocols
      summary: Adds a new protocol
      description: ''
      operationId: addProtocol
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 'Protocol content'
          required: true
          schema:
            $ref: '#/definitions/Protocol'
      responses:
        '200':
          description: Successful operation. Protocol was created.
          schema:
            $ref: '#/definitions/ProtocolFile'
        '500':
          description: Server-side error
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: Invalid content
  '/protocols/{protocol_id}':
    get:
      tags:
        - protocols
      summary: Find a protocol by ID
      description: Returns a single protocol
      operationId: getProtocolById
      produces:
        - application/json
      parameters:
        - name: protocol_id
          in: path
          description: ID of protocol to return
          required: true
          type: string
          default: 704D8607-5040-4B07-8401-7F90E8B855C4
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProtocolFile'
        '400':
          description: Invalid ID
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Protocol not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server-side error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - protocols
      summary: Updates a protocol
      description: ''
      operationId: updateProtocol
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: protocol_id
          in: path
          description: ID of protocol that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: 'Protocol content'
          required: true
          schema:
            $ref: '#/definitions/ProtocolFile'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProtocolFile'
        '422':
          description: Invalid content
          schema:
            $ref: '#/definitions/Error'
        '400':
          description: Invalid ID
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Protocol not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server-side error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - protocols
      summary: Deletes a protocol
      description: ''
      operationId: deleteProtocol
      produces:
        - application/json
      parameters:
        - name: protocol_id
          in: path
          description: Protocol id to delete
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Protocol not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server-side error
          schema:
            $ref: '#/definitions/Error'
  /protocols/validate:
    put:
      tags:
        - protocols
      summary: Validate a protocol (for testing validator)
      description: ''
      operationId: validateProtocol
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 'Protocol content'
          required: true
          schema:
            $ref: '#/definitions/Protocol'
      responses:
        '200':
          description: successful operation
        '422':
          description: Invalid data
  /logs:
    get:
      tags:
        - logs
      summary: Returns experiment logs
      description: Returns a map of status codes to quantities
      operationId: getLogs
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
  '/logs/{log_id}':
    get:
      tags:
        - logs
      summary: Returns experiment logs
      description: Returns a map of status codes to quantities
      operationId: findLogById
      produces:
        - application/json
      parameters:
        - name: log_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ExperimentFile'
  /device:
    get:
      tags:
        - device
      summary: Get device summary
      operationId: getDevice
      produces:
        - application/json
      responses:
        default:
          description: successful operation
  /device/experiment:
    get:
      tags:
        - device
      summary: Returns ongoing experiment
      description: ''
      operationId: getDeviceExperiment
      produces:
        - application/json
      responses:
        default:
          description: successful operation
  /device/experiment/protocol:
    get:
      tags:
        - device
      summary: Returns ongoing experiment
      description: ''
      operationId: getDeviceExperimentProtocol
      produces:
        - application/json
      responses:
        default:
          description: successful operation
  /device/experiment/progress:
    get:
      tags:
        - device
      summary: Returns ongoing experiment
      description: ''
      operationId: getDeviceExperimentProgress
      produces:
        - application/json
      responses:
        default:
          description: successful operation
definitions:
  Pagination:
    type: object
    properties:
      paging:
        type: object
        properties:
          offset:
            type: integer
            format: int32
            description: Number of skipped items
          page:
            type: integer
            format: int32
            description: Page index
          limit:
            type: integer
            format: int32
            description: Max items per page
          size:
            type: integer
            format: int32
            description: Number of included items
          total:
            type: integer
            format: int32
            description: Number of total items
          pages:
            type: integer
            format: int32
            description: Number of pages
      data:
        type: array
        items:
          type: object
  Error:
    type: object
    properties:
      message:
        type: string
        example: something wrong
  ExperimentFile:
    type: object
    properties:
      id:
        type: string
        example: 15644F61-CBFC-4876-8DD4-1325269AB2DA
      log:
        $ref: '#/definitions/Experiment'
  ProtocolFile:
    type: object
    properties:
      id:
        type: string
        example: 15644F61-CBFC-4876-8DD4-1325269AB2DA
      protocol:
        $ref: '#/definitions/Protocol'
  Experiment:
    type: object
    properties:
      id:
        type: string
        example: 15644F61-CBFC-4876-8DD4-1325269AB2DA
      name:
        type: string
      protocol:
        type: object
        $ref: '#/definitions/Protocol'
      log:
        type: object
      status:
        type: object
  Progress:
    type: object
  Protocol:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: Demo Protocol
      lid_temp:
        type: integer
        format: int32
        example: 110
      final_hold_temp:
        type: integer
        format: int32
        example: 30
      stages:
        type: array
        items:
          $ref: '#/definitions/Stage'
    xml:
      name: Protocol
  Stage:
    type: object
    properties:
      type:
        type: integer
        format: int32
        example: 1
      repeat:
        type: integer
        format: int32
      steps:
        type: array
        items:
          $ref: '#/definitions/Step'
  Step:
    type: object
    properties:
      label:
        type: string
        enum: [hold, denature, anneal, extend, cool, melt]
        example: anneal
      temp:
        type: number
        format: float
        description: Hold temperature in Celsius
      duration:
        type: number
        format: float
        example: 20000
        description: Hold temperature in milliseconds
      data_collection:
        type: array
        items:
          type: integer
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
